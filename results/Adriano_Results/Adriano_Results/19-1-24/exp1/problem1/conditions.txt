Knapsack problem instance:
	{'problem_type': 'knapsack', 'values': [4, 1, 4, 2, 2], 'weights': [4, 2, 4, 1, 3], 'weight_capacity': 7, 'penalty': 8, 'n_items': 5}

parameters to combine:
	ps = [3, 4, 5, 6]
	param_types = ["standard", "standard_w_bias", "annealing"]
	init_types = ["rand", "ramp"]
	mixer_hams = ["x", "xy"]
	optimizers = ["Nelder-Mead", "Powell", "COBYLA"]

QAOA creation:

	q1 = QAOA()
        qiskit_device = create_device(location='ibmq', name='ibmq_qasm_simulator')
        q1.set_device(qiskit_device)
        q1.set_circuit_properties(p=p, param_type=param_type, init_type=init_type, mixer_hamiltonian=mixer_hamiltonian)
        q1.set_backend_properties(n_shots=5000, seed_simulator=1)
        q1.set_classical_optimizer(method=optimizer, maxiter=200, tol=0.01,
        optimization_progress=True, cost_progress=True, parameter_log=True)