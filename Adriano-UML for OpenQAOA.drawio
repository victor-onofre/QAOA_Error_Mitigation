<mxfile host="app.diagrams.net" modified="2023-12-13T20:57:21.765Z" agent="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36" etag="aaiwf-GO6jyTbcpAtrUK" version="22.1.8" type="device" pages="4">
  <diagram name="ActivityChart" id="oDupk-FMPXV4E4s_OF5n">
    <mxGraphModel dx="2003" dy="507" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="Sw15mcLpqIkYUfUt5M2m-1" value=":QAOA" style="shape=umlLifeline;perimeter=lifelinePerimeter;whiteSpace=wrap;html=1;container=1;dropTarget=0;collapsible=0;recursiveResize=0;outlineConnect=0;portConstraint=eastwest;newEdgeStyle={&quot;curved&quot;:0,&quot;rounded&quot;:0};" parent="1" vertex="1">
          <mxGeometry x="140" y="170" width="100" height="1630" as="geometry" />
        </mxCell>
        <mxCell id="Sw15mcLpqIkYUfUt5M2m-11" value="" style="html=1;points=[[0,0,0,0,5],[0,1,0,0,-5],[1,0,0,0,5],[1,1,0,0,-5]];perimeter=orthogonalPerimeter;outlineConnect=0;targetShapes=umlLifeline;portConstraint=eastwest;newEdgeStyle={&quot;curved&quot;:0,&quot;rounded&quot;:0};" parent="Sw15mcLpqIkYUfUt5M2m-1" vertex="1">
          <mxGeometry x="45" y="64" width="10" height="1526" as="geometry" />
        </mxCell>
        <mxCell id="Sw15mcLpqIkYUfUt5M2m-12" value="compile(problem_qubo)" style="html=1;verticalAlign=bottom;endArrow=block;curved=0;rounded=0;entryX=0;entryY=0;entryDx=0;entryDy=5;" parent="Sw15mcLpqIkYUfUt5M2m-1" target="Sw15mcLpqIkYUfUt5M2m-11" edge="1">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="-120" y="70" as="sourcePoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="Sw15mcLpqIkYUfUt5M2m-13" value="None" style="html=1;verticalAlign=bottom;endArrow=open;dashed=1;endSize=8;curved=0;rounded=0;exitX=0;exitY=1;exitDx=0;exitDy=-5;" parent="Sw15mcLpqIkYUfUt5M2m-1" source="Sw15mcLpqIkYUfUt5M2m-11" edge="1">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="-210" y="1585" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="Sw15mcLpqIkYUfUt5M2m-14" value=":DeviceBase" style="shape=umlLifeline;perimeter=lifelinePerimeter;whiteSpace=wrap;html=1;container=1;dropTarget=0;collapsible=0;recursiveResize=0;outlineConnect=0;portConstraint=eastwest;newEdgeStyle={&quot;curved&quot;:0,&quot;rounded&quot;:0};" parent="1" vertex="1">
          <mxGeometry x="390" y="170" width="100" height="1530" as="geometry" />
        </mxCell>
        <mxCell id="Sw15mcLpqIkYUfUt5M2m-18" value="" style="html=1;points=[[0,0,0,0,5],[0,1,0,0,-5],[1,0,0,0,5],[1,1,0,0,-5]];perimeter=orthogonalPerimeter;outlineConnect=0;targetShapes=umlLifeline;portConstraint=eastwest;newEdgeStyle={&quot;curved&quot;:0,&quot;rounded&quot;:0};" parent="Sw15mcLpqIkYUfUt5M2m-14" vertex="1">
          <mxGeometry x="45" y="80" width="10" height="80" as="geometry" />
        </mxCell>
        <mxCell id="Sw15mcLpqIkYUfUt5M2m-19" value="check_connection()" style="html=1;verticalAlign=bottom;endArrow=block;curved=0;rounded=0;entryX=0;entryY=0;entryDx=0;entryDy=5;" parent="1" source="Sw15mcLpqIkYUfUt5M2m-1" target="Sw15mcLpqIkYUfUt5M2m-18" edge="1">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="365" y="255" as="sourcePoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="Sw15mcLpqIkYUfUt5M2m-21" value="/*Connect to the&lt;br&gt;&amp;nbsp; device/QPU specified*/" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="450" y="270" width="150" height="40" as="geometry" />
        </mxCell>
        <mxCell id="Sw15mcLpqIkYUfUt5M2m-22" value=":Workflow" style="shape=umlLifeline;perimeter=lifelinePerimeter;whiteSpace=wrap;html=1;container=1;dropTarget=0;collapsible=0;recursiveResize=0;outlineConnect=0;portConstraint=eastwest;newEdgeStyle={&quot;curved&quot;:0,&quot;rounded&quot;:0};" parent="1" vertex="1">
          <mxGeometry x="640" y="170" width="100" height="1510" as="geometry" />
        </mxCell>
        <mxCell id="Sw15mcLpqIkYUfUt5M2m-24" value="" style="html=1;points=[[0,0,0,0,5],[0,1,0,0,-5],[1,0,0,0,5],[1,1,0,0,-5]];perimeter=orthogonalPerimeter;outlineConnect=0;targetShapes=umlLifeline;portConstraint=eastwest;newEdgeStyle={&quot;curved&quot;:0,&quot;rounded&quot;:0};" parent="Sw15mcLpqIkYUfUt5M2m-22" vertex="1">
          <mxGeometry x="45" y="182" width="10" height="138" as="geometry" />
        </mxCell>
        <mxCell id="Sw15mcLpqIkYUfUt5M2m-25" value="compile(problem_qubo)" style="html=1;verticalAlign=bottom;endArrow=block;curved=0;rounded=0;entryX=0;entryY=0;entryDx=0;entryDy=5;" parent="1" source="Sw15mcLpqIkYUfUt5M2m-1" target="Sw15mcLpqIkYUfUt5M2m-24" edge="1">
          <mxGeometry x="0.3598" relative="1" as="geometry">
            <mxPoint x="300" y="355" as="sourcePoint" />
            <mxPoint x="1" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="Sw15mcLpqIkYUfUt5M2m-27" value="&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;/*&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;1-Check that problem_qubo is&lt;/span&gt;&lt;/div&gt;QUBO formulated&lt;br&gt;&lt;br&gt;2-Check that &lt;br&gt;device_qubit_num &amp;gt;= problem_qubit_num&lt;br&gt;&lt;br&gt;3- Generate the atomic id for the compilation */" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="700" y="370" width="270" height="110" as="geometry" />
        </mxCell>
        <mxCell id="Sw15mcLpqIkYUfUt5M2m-28" value=":Hamiltonian" style="shape=umlLifeline;perimeter=lifelinePerimeter;whiteSpace=wrap;html=1;container=1;dropTarget=0;collapsible=0;recursiveResize=0;outlineConnect=0;portConstraint=eastwest;newEdgeStyle={&quot;curved&quot;:0,&quot;rounded&quot;:0};" parent="1" vertex="1">
          <mxGeometry x="950" y="170" width="100" height="1520" as="geometry" />
        </mxCell>
        <mxCell id="Sw15mcLpqIkYUfUt5M2m-30" value="" style="html=1;points=[[0,0,0,0,5],[0,1,0,0,-5],[1,0,0,0,5],[1,1,0,0,-5]];perimeter=orthogonalPerimeter;outlineConnect=0;targetShapes=umlLifeline;portConstraint=eastwest;newEdgeStyle={&quot;curved&quot;:0,&quot;rounded&quot;:0};" parent="Sw15mcLpqIkYUfUt5M2m-28" vertex="1">
          <mxGeometry x="45" y="360" width="10" height="80" as="geometry" />
        </mxCell>
        <mxCell id="Sw15mcLpqIkYUfUt5M2m-31" value="classical_hamiltonian(problem_terms,problem_coeffs,problem_constant)" style="html=1;verticalAlign=bottom;endArrow=block;curved=0;rounded=0;entryX=0;entryY=0;entryDx=0;entryDy=5;" parent="1" source="Sw15mcLpqIkYUfUt5M2m-1" target="Sw15mcLpqIkYUfUt5M2m-30" edge="1">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="280" y="515" as="sourcePoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="Sw15mcLpqIkYUfUt5M2m-32" value="classical_hamiltonian" style="html=1;verticalAlign=bottom;endArrow=open;dashed=1;endSize=8;curved=0;rounded=0;exitX=0;exitY=1;exitDx=0;exitDy=-5;" parent="1" source="Sw15mcLpqIkYUfUt5M2m-30" target="Sw15mcLpqIkYUfUt5M2m-1" edge="1">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="280" y="585" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="Sw15mcLpqIkYUfUt5M2m-33" value="// save classical_hamiltonian as&lt;br&gt;// cost_hamil" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="185" y="573" width="190" height="40" as="geometry" />
        </mxCell>
        <mxCell id="Sw15mcLpqIkYUfUt5M2m-34" value="/*Create the problem&lt;br&gt;classical hamiltonian*/" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="1010" y="553" width="140" height="40" as="geometry" />
        </mxCell>
        <mxCell id="Sw15mcLpqIkYUfUt5M2m-35" value="// get and save the mixer hamiltonian&lt;br&gt;//as mixer_hamil" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="190" y="625" width="220" height="40" as="geometry" />
        </mxCell>
        <mxCell id="Sw15mcLpqIkYUfUt5M2m-36" value=":QAOADescriptor" style="shape=umlLifeline;perimeter=lifelinePerimeter;whiteSpace=wrap;html=1;container=1;dropTarget=0;collapsible=0;recursiveResize=0;outlineConnect=0;portConstraint=eastwest;newEdgeStyle={&quot;curved&quot;:0,&quot;rounded&quot;:0};" parent="1" vertex="1">
          <mxGeometry x="1170" y="170" width="100" height="1520" as="geometry" />
        </mxCell>
        <mxCell id="Sw15mcLpqIkYUfUt5M2m-38" value="" style="html=1;points=[[0,0,0,0,5],[0,1,0,0,-5],[1,0,0,0,5],[1,1,0,0,-5]];perimeter=orthogonalPerimeter;outlineConnect=0;targetShapes=umlLifeline;portConstraint=eastwest;newEdgeStyle={&quot;curved&quot;:0,&quot;rounded&quot;:0};" parent="Sw15mcLpqIkYUfUt5M2m-36" vertex="1">
          <mxGeometry x="44" y="500" width="10" height="520" as="geometry" />
        </mxCell>
        <mxCell id="Sw15mcLpqIkYUfUt5M2m-39" value="__init__(cost_hamil, mixer_hamil, p, routing_function,device)" style="html=1;verticalAlign=bottom;endArrow=block;curved=0;rounded=0;entryX=0;entryY=0;entryDx=0;entryDy=5;" parent="Sw15mcLpqIkYUfUt5M2m-36" source="Sw15mcLpqIkYUfUt5M2m-1" edge="1">
          <mxGeometry x="0.0356" relative="1" as="geometry">
            <mxPoint x="-40" y="506" as="sourcePoint" />
            <mxPoint x="44" y="506" as="targetPoint" />
            <Array as="points">
              <mxPoint x="-450" y="506" />
            </Array>
            <mxPoint x="1" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="Sw15mcLpqIkYUfUt5M2m-42" value=":AnsatzDescriptor" style="shape=umlLifeline;perimeter=lifelinePerimeter;whiteSpace=wrap;html=1;container=1;dropTarget=0;collapsible=0;recursiveResize=0;outlineConnect=0;portConstraint=eastwest;newEdgeStyle={&quot;curved&quot;:0,&quot;rounded&quot;:0};" parent="1" vertex="1">
          <mxGeometry x="1430" y="175" width="100" height="1525" as="geometry" />
        </mxCell>
        <mxCell id="Sw15mcLpqIkYUfUt5M2m-46" value="" style="html=1;points=[[0,0,0,0,5],[0,1,0,0,-5],[1,0,0,0,5],[1,1,0,0,-5]];perimeter=orthogonalPerimeter;outlineConnect=0;targetShapes=umlLifeline;portConstraint=eastwest;newEdgeStyle={&quot;curved&quot;:0,&quot;rounded&quot;:0};" parent="Sw15mcLpqIkYUfUt5M2m-42" vertex="1">
          <mxGeometry x="45" y="515" width="10" height="80" as="geometry" />
        </mxCell>
        <mxCell id="Sw15mcLpqIkYUfUt5M2m-47" value="__init__(algorithm = &#39;QAOA)" style="html=1;verticalAlign=bottom;endArrow=block;curved=0;rounded=0;entryX=0;entryY=0;entryDx=0;entryDy=5;" parent="1" source="Sw15mcLpqIkYUfUt5M2m-36" target="Sw15mcLpqIkYUfUt5M2m-46" edge="1">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="1410" y="695" as="sourcePoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="Sw15mcLpqIkYUfUt5M2m-49" value="\* save p and important info about&lt;br&gt;mixer and cost hamiltonians */" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="1226" y="778" width="200" height="40" as="geometry" />
        </mxCell>
        <mxCell id="Sw15mcLpqIkYUfUt5M2m-54" value="/*with self.block_setter() method, it creates&lt;br&gt;the cost block and mixer block with&amp;nbsp;&lt;br&gt;the GateMap() objects.*/" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="1216" y="840" width="250" height="60" as="geometry" />
        </mxCell>
        <mxCell id="Sw15mcLpqIkYUfUt5M2m-56" value=":HamiltonianMapper" style="shape=umlLifeline;perimeter=lifelinePerimeter;whiteSpace=wrap;html=1;container=1;dropTarget=0;collapsible=0;recursiveResize=0;outlineConnect=0;portConstraint=eastwest;newEdgeStyle={&quot;curved&quot;:0,&quot;rounded&quot;:0};" parent="1" vertex="1">
          <mxGeometry x="1640" y="170" width="120" height="1520" as="geometry" />
        </mxCell>
        <mxCell id="Sw15mcLpqIkYUfUt5M2m-58" value="" style="html=1;points=[[0,0,0,0,5],[0,1,0,0,-5],[1,0,0,0,5],[1,1,0,0,-5]];perimeter=orthogonalPerimeter;outlineConnect=0;targetShapes=umlLifeline;portConstraint=eastwest;newEdgeStyle={&quot;curved&quot;:0,&quot;rounded&quot;:0};" parent="Sw15mcLpqIkYUfUt5M2m-56" vertex="1">
          <mxGeometry x="55" y="740" width="10" height="50" as="geometry" />
        </mxCell>
        <mxCell id="Sw15mcLpqIkYUfUt5M2m-62" value="" style="html=1;points=[[0,0,0,0,5],[0,1,0,0,-5],[1,0,0,0,5],[1,1,0,0,-5]];perimeter=orthogonalPerimeter;outlineConnect=0;targetShapes=umlLifeline;portConstraint=eastwest;newEdgeStyle={&quot;curved&quot;:0,&quot;rounded&quot;:0};" parent="Sw15mcLpqIkYUfUt5M2m-56" vertex="1">
          <mxGeometry x="55" y="810" width="10" height="50" as="geometry" />
        </mxCell>
        <mxCell id="Sw15mcLpqIkYUfUt5M2m-59" value="repeat_gate_maps(mixer_block,p)" style="html=1;verticalAlign=bottom;endArrow=block;curved=0;rounded=0;entryX=0;entryY=0;entryDx=0;entryDy=5;" parent="1" source="Sw15mcLpqIkYUfUt5M2m-36" target="Sw15mcLpqIkYUfUt5M2m-58" edge="1">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="1625" y="915" as="sourcePoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="Sw15mcLpqIkYUfUt5M2m-60" value="mixer_blocks" style="html=1;verticalAlign=bottom;endArrow=open;dashed=1;endSize=8;curved=0;rounded=0;exitX=0;exitY=1;exitDx=0;exitDy=-5;" parent="1" source="Sw15mcLpqIkYUfUt5M2m-58" target="Sw15mcLpqIkYUfUt5M2m-36" edge="1">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="1625" y="985" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="Sw15mcLpqIkYUfUt5M2m-66" value="qureg = // n_qubits" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="1216" y="1030" width="120" height="30" as="geometry" />
        </mxCell>
        <mxCell id="Sw15mcLpqIkYUfUt5M2m-68" value="//Get the variational params with&lt;br&gt;// create_qaoa_variational_params()" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="200" y="1100" width="220" height="40" as="geometry" />
        </mxCell>
        <mxCell id="Sw15mcLpqIkYUfUt5M2m-74" value="No object&lt;br&gt;(qaoa_backend.py)" style="shape=umlLifeline;perimeter=lifelinePerimeter;whiteSpace=wrap;html=1;container=1;dropTarget=0;collapsible=0;recursiveResize=0;outlineConnect=0;portConstraint=eastwest;newEdgeStyle={&quot;curved&quot;:0,&quot;rounded&quot;:0};" parent="1" vertex="1">
          <mxGeometry x="1870" y="170" width="120" height="1530" as="geometry" />
        </mxCell>
        <mxCell id="Sw15mcLpqIkYUfUt5M2m-75" value="" style="html=1;points=[[0,0,0,0,5],[0,1,0,0,-5],[1,0,0,0,5],[1,1,0,0,-5]];perimeter=orthogonalPerimeter;outlineConnect=0;targetShapes=umlLifeline;portConstraint=eastwest;newEdgeStyle={&quot;curved&quot;:0,&quot;rounded&quot;:0};" parent="Sw15mcLpqIkYUfUt5M2m-74" vertex="1">
          <mxGeometry x="54" y="1050" width="10" height="220" as="geometry" />
        </mxCell>
        <mxCell id="Sw15mcLpqIkYUfUt5M2m-76" value="get_qaoa_backend(qaoa_descriptor,device, **backend_dict)" style="html=1;verticalAlign=bottom;endArrow=block;curved=0;rounded=0;entryX=0;entryY=0;entryDx=0;entryDy=5;" parent="1" source="Sw15mcLpqIkYUfUt5M2m-1" target="Sw15mcLpqIkYUfUt5M2m-75" edge="1">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="1790" y="1225" as="sourcePoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="Sw15mcLpqIkYUfUt5M2m-77" value="backend" style="html=1;verticalAlign=bottom;endArrow=open;dashed=1;endSize=8;curved=0;rounded=0;exitX=0;exitY=1;exitDx=0;exitDy=-5;" parent="1" source="Sw15mcLpqIkYUfUt5M2m-75" target="Sw15mcLpqIkYUfUt5M2m-1" edge="1">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="270" y="1440" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="Sw15mcLpqIkYUfUt5M2m-78" value="backend_dict = &lt;br&gt;self.backend_properties.__dict__.copy()" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="190" y="1150" width="240" height="40" as="geometry" />
        </mxCell>
        <mxCell id="Sw15mcLpqIkYUfUt5M2m-79" value="No object&lt;br&gt;(qaoa_backend.py)" style="shape=umlLifeline;perimeter=lifelinePerimeter;whiteSpace=wrap;html=1;container=1;dropTarget=0;collapsible=0;recursiveResize=0;outlineConnect=0;portConstraint=eastwest;newEdgeStyle={&quot;curved&quot;:0,&quot;rounded&quot;:0};" parent="1" vertex="1">
          <mxGeometry x="2143" y="170" width="120" height="1550" as="geometry" />
        </mxCell>
        <mxCell id="Sw15mcLpqIkYUfUt5M2m-82" value="" style="html=1;points=[[0,0,0,0,5],[0,1,0,0,-5],[1,0,0,0,5],[1,1,0,0,-5]];perimeter=orthogonalPerimeter;outlineConnect=0;targetShapes=umlLifeline;portConstraint=eastwest;newEdgeStyle={&quot;curved&quot;:0,&quot;rounded&quot;:0};" parent="Sw15mcLpqIkYUfUt5M2m-79" vertex="1">
          <mxGeometry x="56" y="1070" width="10" height="80" as="geometry" />
        </mxCell>
        <mxCell id="Sw15mcLpqIkYUfUt5M2m-83" value="device_to_backend_mapper(device)" style="html=1;verticalAlign=bottom;endArrow=block;curved=0;rounded=0;entryX=0;entryY=0;entryDx=0;entryDy=5;" parent="1" source="Sw15mcLpqIkYUfUt5M2m-74" target="Sw15mcLpqIkYUfUt5M2m-82" edge="1">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="2046" y="1245" as="sourcePoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="Sw15mcLpqIkYUfUt5M2m-86" value="/*If through compile()&amp;nbsp; we send an invalid device,&lt;br&gt;&amp;nbsp;we will get the exception in page 1*/" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="2200" y="1270" width="280" height="40" as="geometry" />
        </mxCell>
        <mxCell id="Sw15mcLpqIkYUfUt5M2m-84" value="reference to a backend_class()" style="html=1;verticalAlign=bottom;endArrow=open;dashed=1;endSize=8;curved=0;rounded=0;exitX=0;exitY=1;exitDx=0;exitDy=-5;" parent="1" source="Sw15mcLpqIkYUfUt5M2m-82" target="Sw15mcLpqIkYUfUt5M2m-74" edge="1">
          <mxGeometry x="0.0019" relative="1" as="geometry">
            <mxPoint x="2129" y="1315" as="targetPoint" />
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="oCmyYP7pr3xFvVx9gfH_-1" value="/* Create the instance of &lt;br&gt;backend_class(qaoa_descriptor)*/" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="1930" y="1335" width="200" height="40" as="geometry" />
        </mxCell>
        <mxCell id="mU6L7HNmjxaAw3aRuoAc-1" value="cost_blocks" style="html=1;verticalAlign=bottom;endArrow=open;dashed=1;endSize=8;curved=0;rounded=0;" parent="1" edge="1">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="197" y="1070" as="targetPoint" />
            <mxPoint x="1216" y="1070" as="sourcePoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="Sw15mcLpqIkYUfUt5M2m-64" value="cost_blocks" style="html=1;verticalAlign=bottom;endArrow=open;dashed=1;endSize=8;curved=0;rounded=0;exitX=0;exitY=1;exitDx=0;exitDy=-5;" parent="1" source="Sw15mcLpqIkYUfUt5M2m-62" target="Sw15mcLpqIkYUfUt5M2m-38" edge="1">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="1220" y="1095" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="Sw15mcLpqIkYUfUt5M2m-63" value="repeat_gate_maps(cost_block,p)" style="html=1;verticalAlign=bottom;endArrow=block;curved=0;rounded=0;entryX=0;entryY=0;entryDx=0;entryDy=5;" parent="1" source="Sw15mcLpqIkYUfUt5M2m-36" target="Sw15mcLpqIkYUfUt5M2m-62" edge="1">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="1220" y="1025" as="sourcePoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="Gg8EoqTkq4HEwJrWqN-j-1" value="/* if spam_twirling error mititgation&lt;br&gt;technique was setted, it add a &lt;br&gt;SPAMTwirlingWrapper&lt;br&gt;to the backend*/&lt;br&gt;&lt;br&gt;backend = SPAMTwirlingWrapper" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="200" y="1470" width="200" height="100" as="geometry" />
        </mxCell>
        <mxCell id="Gg8EoqTkq4HEwJrWqN-j-2" value="&lt;font color=&quot;#ff0000&quot;&gt;THIS PART IS IMPORTANT,&lt;br&gt;IS WHERE WE COULD ADD A&lt;br&gt;THE ZNE ERROR MITIGATION&lt;br&gt;TECHNIQUE&lt;/font&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="-5" y="1470" width="190" height="70" as="geometry" />
        </mxCell>
        <mxCell id="Gg8EoqTkq4HEwJrWqN-j-3" value="No object&lt;br&gt;(qaoa_optimizer.py)" style="shape=umlLifeline;perimeter=lifelinePerimeter;whiteSpace=wrap;html=1;container=1;dropTarget=0;collapsible=0;recursiveResize=0;outlineConnect=0;portConstraint=eastwest;newEdgeStyle={&quot;curved&quot;:0,&quot;rounded&quot;:0};" parent="1" vertex="1">
          <mxGeometry x="2470" y="170" width="120" height="1570" as="geometry" />
        </mxCell>
        <mxCell id="Gg8EoqTkq4HEwJrWqN-j-5" value="" style="html=1;points=[[0,0,0,0,5],[0,1,0,0,-5],[1,0,0,0,5],[1,1,0,0,-5]];perimeter=orthogonalPerimeter;outlineConnect=0;targetShapes=umlLifeline;portConstraint=eastwest;newEdgeStyle={&quot;curved&quot;:0,&quot;rounded&quot;:0};" parent="Gg8EoqTkq4HEwJrWqN-j-3" vertex="1">
          <mxGeometry x="55" y="1430" width="10" height="80" as="geometry" />
        </mxCell>
        <mxCell id="Gg8EoqTkq4HEwJrWqN-j-6" value="get_optimizer(backend,variate_params)" style="html=1;verticalAlign=bottom;endArrow=block;curved=0;rounded=0;entryX=0;entryY=0;entryDx=0;entryDy=5;edgeStyle=orthogonalEdgeStyle;" parent="1" source="Sw15mcLpqIkYUfUt5M2m-1" target="Gg8EoqTkq4HEwJrWqN-j-5" edge="1">
          <mxGeometry x="-0.0003" relative="1" as="geometry">
            <mxPoint x="350" y="1680" as="sourcePoint" />
            <Array as="points">
              <mxPoint x="1160" y="1605" />
              <mxPoint x="1160" y="1605" />
            </Array>
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="Gg8EoqTkq4HEwJrWqN-j-9" value="//Select one valid optimizer" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="2530" y="1630" width="170" height="30" as="geometry" />
        </mxCell>
        <mxCell id="Gg8EoqTkq4HEwJrWqN-j-7" value="optimizer" style="html=1;verticalAlign=bottom;endArrow=open;dashed=1;endSize=8;curved=0;rounded=0;exitX=0;exitY=1;exitDx=0;exitDy=-5;edgeStyle=orthogonalEdgeStyle;" parent="1" source="Gg8EoqTkq4HEwJrWqN-j-5" target="Sw15mcLpqIkYUfUt5M2m-1" edge="1">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="2390" y="1690" as="targetPoint" />
            <Array as="points">
              <mxPoint x="690" y="1675" />
              <mxPoint x="690" y="1675" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="Gg8EoqTkq4HEwJrWqN-j-11" value="//set header properties" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="200" y="1700" width="140" height="30" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
  <diagram id="BzUMfbM0G8niO9HiFAAd" name="ClassChart">
    <mxGraphModel dx="1176" dy="1676" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="tfjh0CTLJ3QGft80ACT7-1" value="VQABaseBackend" style="html=1;whiteSpace=wrap;" vertex="1" parent="1">
          <mxGeometry x="400" y="240" width="110" height="50" as="geometry" />
        </mxCell>
        <mxCell id="tfjh0CTLJ3QGft80ACT7-10" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" edge="1" parent="1" source="tfjh0CTLJ3QGft80ACT7-2" target="tfjh0CTLJ3QGft80ACT7-5">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="tfjh0CTLJ3QGft80ACT7-2" value="QAOABaseBackend" style="html=1;whiteSpace=wrap;" vertex="1" parent="1">
          <mxGeometry x="400" y="380" width="110" height="50" as="geometry" />
        </mxCell>
        <mxCell id="tfjh0CTLJ3QGft80ACT7-7" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" edge="1" parent="1" source="tfjh0CTLJ3QGft80ACT7-3" target="tfjh0CTLJ3QGft80ACT7-6">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="tfjh0CTLJ3QGft80ACT7-3" value="QAOABaseBackend&lt;br&gt;Statevector" style="html=1;whiteSpace=wrap;" vertex="1" parent="1">
          <mxGeometry x="250" y="535" width="130" height="50" as="geometry" />
        </mxCell>
        <mxCell id="tfjh0CTLJ3QGft80ACT7-8" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" edge="1" parent="1" source="tfjh0CTLJ3QGft80ACT7-4" target="tfjh0CTLJ3QGft80ACT7-6">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="tfjh0CTLJ3QGft80ACT7-4" value="QAOABaseBackend&lt;br&gt;ShotBased" style="html=1;whiteSpace=wrap;" vertex="1" parent="1">
          <mxGeometry x="520" y="535" width="130" height="50" as="geometry" />
        </mxCell>
        <mxCell id="tfjh0CTLJ3QGft80ACT7-11" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="tfjh0CTLJ3QGft80ACT7-5" target="tfjh0CTLJ3QGft80ACT7-1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="tfjh0CTLJ3QGft80ACT7-5" value="" style="triangle;whiteSpace=wrap;html=1;rotation=-90;" vertex="1" parent="1">
          <mxGeometry x="440" y="310" width="30" height="40" as="geometry" />
        </mxCell>
        <mxCell id="tfjh0CTLJ3QGft80ACT7-9" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="tfjh0CTLJ3QGft80ACT7-6" target="tfjh0CTLJ3QGft80ACT7-2">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="tfjh0CTLJ3QGft80ACT7-6" value="" style="triangle;whiteSpace=wrap;html=1;rotation=-90;" vertex="1" parent="1">
          <mxGeometry x="440" y="470" width="30" height="40" as="geometry" />
        </mxCell>
        <mxCell id="tfjh0CTLJ3QGft80ACT7-12" value="QAIABaseBackend&lt;br&gt;Cloud" style="html=1;whiteSpace=wrap;" vertex="1" parent="1">
          <mxGeometry x="190" y="240" width="110" height="50" as="geometry" />
        </mxCell>
        <mxCell id="tfjh0CTLJ3QGft80ACT7-13" value="DeviceBase" style="html=1;whiteSpace=wrap;" vertex="1" parent="1">
          <mxGeometry x="700" y="240" width="110" height="50" as="geometry" />
        </mxCell>
        <mxCell id="tfjh0CTLJ3QGft80ACT7-15" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="tfjh0CTLJ3QGft80ACT7-14" target="tfjh0CTLJ3QGft80ACT7-13">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="tfjh0CTLJ3QGft80ACT7-18" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" edge="1" parent="1" source="tfjh0CTLJ3QGft80ACT7-14" target="tfjh0CTLJ3QGft80ACT7-17">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="tfjh0CTLJ3QGft80ACT7-21" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.75;exitY=0;exitDx=0;exitDy=0;" edge="1" parent="1" source="tfjh0CTLJ3QGft80ACT7-14" target="tfjh0CTLJ3QGft80ACT7-20">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="520" y="-40" as="sourcePoint" />
            <mxPoint x="945" y="55" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="6xP_ha1uj3AP3WvxZfg0-1" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="tfjh0CTLJ3QGft80ACT7-14" target="tfjh0CTLJ3QGft80ACT7-1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="tfjh0CTLJ3QGft80ACT7-14" value="QAOA" style="html=1;whiteSpace=wrap;" vertex="1" parent="1">
          <mxGeometry x="400" y="-20" width="110" height="50" as="geometry" />
        </mxCell>
        <mxCell id="tfjh0CTLJ3QGft80ACT7-16" value="1" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="730" y="210" width="30" height="30" as="geometry" />
        </mxCell>
        <mxCell id="tfjh0CTLJ3QGft80ACT7-17" value="Hamiltonian" style="html=1;whiteSpace=wrap;" vertex="1" parent="1">
          <mxGeometry x="190" y="100" width="110" height="50" as="geometry" />
        </mxCell>
        <mxCell id="tfjh0CTLJ3QGft80ACT7-19" value="2(cost and&lt;br&gt;mixer)" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="160" y="60" width="80" height="40" as="geometry" />
        </mxCell>
        <mxCell id="tfjh0CTLJ3QGft80ACT7-20" value="QAOADescriptor" style="html=1;whiteSpace=wrap;" vertex="1" parent="1">
          <mxGeometry x="880" y="100" width="110" height="50" as="geometry" />
        </mxCell>
        <mxCell id="tfjh0CTLJ3QGft80ACT7-22" value="1" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="940" y="60" width="30" height="30" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
  <diagram id="1KysnJVaVC0nRL32DcJ_" name="Page1">
    <mxGraphModel dx="-478" dy="-662" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="fasyP74kSTeA-cHdXuYK-1" value="&lt;pre style=&quot;box-sizing: border-box; overflow: auto; font-family: monospace; display: block; padding: 1px 0px; margin: 0px; line-height: inherit; color: rgb(0, 0, 0); word-break: break-all; overflow-wrap: break-word; background-color: rgb(255, 255, 255); border: 0px; border-radius: 0px; vertical-align: baseline; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&lt;b style=&quot;&quot;&gt;EXCEPTION &lt;/b&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;The device &amp;lt;openqaoa.backends.devices_core.DeviceLocal object at 0x0000024C54BBE680&amp;gt; is not supported.&lt;/span&gt;&lt;/font&gt;&lt;/pre&gt;&lt;pre style=&quot;box-sizing: border-box; overflow: auto; font-family: monospace; display: block; padding: 1px 0px; margin: 0px; line-height: inherit; color: rgb(0, 0, 0); word-break: break-all; overflow-wrap: break-word; background-color: rgb(255, 255, 255); border: 0px; border-radius: 0px; vertical-align: baseline; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;Please choose from dict_keys([&#39;vectorized&#39;, &#39;analytical_simulator&#39;, &#39;pyquil.statevector_simulator&#39;,&lt;/font&gt;&lt;/pre&gt;&lt;pre style=&quot;box-sizing: border-box; overflow: auto; font-family: monospace; display: block; padding: 1px 0px; margin: 0px; line-height: inherit; color: rgb(0, 0, 0); word-break: break-all; overflow-wrap: break-word; background-color: rgb(255, 255, 255); border: 0px; border-radius: 0px; vertical-align: baseline; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt; &#39;qiskit.qasm_simulator&#39;, &#39;qiskit.shot_simulator&#39;, &#39;qiskit.statevector_simulator&#39;])&lt;/font&gt;&lt;/pre&gt;" style="text;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="2440" y="1230" width="990" height="160" as="geometry" />
        </mxCell>
        <mxCell id="fasyP74kSTeA-cHdXuYK-2" value="" style="shape=image;verticalLabelPosition=bottom;labelBackgroundColor=default;verticalAlign=top;aspect=fixed;imageAspect=0;image=data:image/png,;" parent="1" vertex="1">
          <mxGeometry x="2490" y="1450" width="651.5" height="153.28" as="geometry" />
        </mxCell>
        <mxCell id="fasyP74kSTeA-cHdXuYK-3" value="" style="shape=singleArrow;direction=north;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="2670" y="1594.7" width="30" height="40" as="geometry" />
        </mxCell>
        <mxCell id="fasyP74kSTeA-cHdXuYK-4" value="" style="shape=singleArrow;direction=north;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="2780" y="1594.7" width="30" height="40" as="geometry" />
        </mxCell>
        <mxCell id="fasyP74kSTeA-cHdXuYK-5" value="&lt;font style=&quot;font-size: 18px;&quot;&gt;Access to dict using:&lt;br&gt;&lt;br&gt;from openqaoa.backends.qaoa_backend import DEVICE_NAME_TO_OBJECT_MAPPER&lt;/font&gt;&lt;div&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;DEVICE_NAME_TO_OBJECT_MAPPER =&amp;nbsp;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font size=&quot;3&quot;&gt;&lt;div&gt;{&#39;vectorized&#39;: openqaoa.backends.qaoa_vectorized.QAOAvectorizedBackendSimulator,&lt;/div&gt;&lt;div&gt;&amp;nbsp;&#39;analytical_simulator&#39;: openqaoa.backends.qaoa_analytical_sim.QAOABackendAnalyticalSimulator,&lt;/div&gt;&lt;div&gt;&amp;nbsp;&#39;pyquil.statevector_simulator&#39;: openqaoa_pyquil.backends.qaoa_pyquil_sim.QAOAPyQuilWavefunctionSimulatorBackend,&lt;/div&gt;&lt;div&gt;&amp;nbsp;&#39;qiskit.qasm_simulator&#39;: openqaoa_qiskit.backends.qaoa_qiskit_sim.QAOAQiskitBackendShotBasedSimulator,&lt;/div&gt;&lt;div&gt;&amp;nbsp;&#39;qiskit.shot_simulator&#39;: openqaoa_qiskit.backends.qaoa_qiskit_sim.QAOAQiskitBackendShotBasedSimulator,&lt;/div&gt;&lt;div&gt;&amp;nbsp;&#39;qiskit.statevector_simulator&#39;: openqaoa_qiskit.backends.qaoa_qiskit_sim.QAOAQiskitBackendStatevecSimulator}&lt;/div&gt;&lt;/font&gt;&lt;/div&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="2540" y="1750" width="890" height="240" as="geometry" />
        </mxCell>
        <mxCell id="BoGS4aAAfHkfW7UOT88U-1" value="&lt;font style=&quot;font-size: 18px;&quot;&gt;These 5 are the supported frontends in MITIQ.&lt;br&gt;&amp;nbsp;Because OpenQAOA has only PyQuil and Qiskit&lt;br&gt;as suported frontends, we could manage to just use&lt;br&gt;&amp;nbsp;these two in the integration.&lt;/font&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="3160" y="1480" width="440" height="100" as="geometry" />
        </mxCell>
        <mxCell id="m6ZnrqRHQ1WVJu8mJZUh-2" value="&lt;font style=&quot;font-size: 18px;&quot;&gt;&amp;nbsp;&lt;b&gt;I think&lt;/b&gt; every backend(local simulator,cloud simulator,cloud QPU)&lt;br&gt;is mapped to one of the above backends. The above backends just are&lt;br&gt;encharged of mapping the OpenQAOA gates to the supported framework(e.g. qiskit) and&lt;br&gt;style of backend used.(e.g.shot based). Of course, there is other logic related to actually&lt;br&gt;connect to the different clouds and run circuits on cloud backends.&lt;br&gt;&lt;br&gt;What i mean is that&lt;b&gt; the part of translating OpenQAOA circuits to Qiskit/pyquil circuits is done&lt;/b&gt;,&lt;br&gt;the same as the part of&lt;b&gt; running the circuit either in local or cloud device&lt;/b&gt;.&lt;br&gt;&lt;/font&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="2570" y="2110" width="820" height="190" as="geometry" />
        </mxCell>
        <mxCell id="nMAG1uxeFGJoEQDclgrH-1" value="&lt;font style=&quot;font-size: 14px;&quot;&gt;Device(could be&lt;br&gt;local,cloud;simulator&lt;br&gt;or QPU)&lt;/font&gt;" style="html=1;whiteSpace=wrap;" parent="1" vertex="1">
          <mxGeometry x="2560" y="2440" width="190" height="80" as="geometry" />
        </mxCell>
        <mxCell id="nMAG1uxeFGJoEQDclgrH-2" value="&lt;span style=&quot;font-size: 14px;&quot;&gt;Backend&lt;br&gt;(the way of doing the computing,&lt;br&gt;e.g statevector calculus or shot based)&lt;br&gt;&lt;/span&gt;" style="html=1;whiteSpace=wrap;" parent="1" vertex="1">
          <mxGeometry x="3050" y="2420" width="190" height="120" as="geometry" />
        </mxCell>
        <mxCell id="nMAG1uxeFGJoEQDclgrH-5" value="has it owns..." style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="2852.88" y="2428" width="90" height="30" as="geometry" />
        </mxCell>
        <mxCell id="nMAG1uxeFGJoEQDclgrH-6" value="" style="shape=singleArrow;whiteSpace=wrap;html=1;arrowWidth=0.2554740905761719;arrowSize=0.09640193693225435;" parent="1" vertex="1">
          <mxGeometry x="2785.75" y="2460" width="244.25" height="60" as="geometry" />
        </mxCell>
        <mxCell id="nMAG1uxeFGJoEQDclgrH-7" value="" style="shape=curlyBracket;whiteSpace=wrap;html=1;rounded=1;labelPosition=left;verticalLabelPosition=middle;align=right;verticalAlign=middle;" parent="1" vertex="1">
          <mxGeometry x="3270" y="2380" width="20" height="200" as="geometry" />
        </mxCell>
        <mxCell id="83oCL5G0ssJQfUV6CG-g-1" value="Agnostic QAOAcircuit&lt;br&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="3315" y="2420" width="140" height="30" as="geometry" />
        </mxCell>
        <mxCell id="83oCL5G0ssJQfUV6CG-g-2" value="" style="shape=singleArrow;direction=south;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="3370" y="2460" width="30" height="60" as="geometry" />
        </mxCell>
        <mxCell id="83oCL5G0ssJQfUV6CG-g-3" value="Specific BackendCircuit" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="3330" y="2540" width="150" height="30" as="geometry" />
        </mxCell>
        <mxCell id="83oCL5G0ssJQfUV6CG-g-4" value="translate to..." style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="3400" y="2475" width="90" height="30" as="geometry" />
        </mxCell>
        <mxCell id="83oCL5G0ssJQfUV6CG-g-6" value="The backend mapper used in compile()&lt;br&gt;has the next goal:" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" parent="1" vertex="1">
          <mxGeometry x="3255" y="2345" width="230" height="40" as="geometry" />
        </mxCell>
        <mxCell id="83oCL5G0ssJQfUV6CG-g-7" value="to be run ...." style="html=1;verticalAlign=bottom;endArrow=open;dashed=1;endSize=8;curved=0;rounded=0;edgeStyle=orthogonalEdgeStyle;entryX=0.5;entryY=1;entryDx=0;entryDy=0;" parent="1" target="nMAG1uxeFGJoEQDclgrH-1" edge="1">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="3330" y="2560" as="sourcePoint" />
            <mxPoint x="2665" y="2560.5" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="VwMZzlmCgoIAHPhgJxlk-1" value="1" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="2980" y="2447" width="30" height="30" as="geometry" />
        </mxCell>
        <mxCell id="VwMZzlmCgoIAHPhgJxlk-2" value="n" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="2780" y="2447" width="30" height="30" as="geometry" />
        </mxCell>
        <mxCell id="TTp6jP6CqjhxUZk7MxtZ-7" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="TTp6jP6CqjhxUZk7MxtZ-3" target="83oCL5G0ssJQfUV6CG-g-1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="3590" y="2432" />
              <mxPoint x="3590" y="2432" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="TTp6jP6CqjhxUZk7MxtZ-3" value="&lt;span style=&quot;font-size: 14px;&quot;&gt;QAOADescriptor&lt;br&gt;&lt;/span&gt;" style="html=1;whiteSpace=wrap;" vertex="1" parent="1">
          <mxGeometry x="3670" y="2372" width="190" height="120" as="geometry" />
        </mxCell>
        <mxCell id="TTp6jP6CqjhxUZk7MxtZ-9" value="has as attribute...." style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="3515" y="2410" width="120" height="30" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
  <diagram id="l6tVIrNfxlELfaFrqCTL" name="Conclussions">
    <mxGraphModel dx="2003" dy="473" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="wCOlYckyQ_BHrE_Ihl15-1" value="&lt;font style=&quot;font-size: 18px;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;b&gt;&lt;u&gt;Conclussions&lt;/u&gt;&lt;/b&gt;:&lt;br&gt;&lt;br&gt;* &lt;b&gt;We can add the different MITIQ noise mitigation technique in the same part where the native &quot;SPAM Twarling&quot;&lt;br&gt;error mitigation technique is added&lt;/b&gt;.This is inside the compile() method, after setting up the backend and before&lt;br&gt;.setting up the optimizer.&amp;nbsp;A good way of adding this logic is creating alternative workflows depending of which&lt;br&gt;technique was choosen by the user(using &quot;if conditions&quot; or &quot;switch conditions&quot;).&lt;br&gt;&lt;br&gt;*Because our goal is to just implement ZNE, but to leave open the door to other developers to add new MITIQ error&lt;br&gt;mitigation techniques, &lt;b&gt;we could create an own MITIQ library or API to encapsulate or the logic related to the&lt;br&gt;different techniques.&amp;nbsp;&lt;/b&gt;&lt;br&gt;&lt;br&gt;*&lt;b&gt;In my opinion, creating an API will be better that a library for future modifications.&lt;/b&gt; That means, a library outside openqaoa_core.&lt;br&gt;Creating a complete library for error mitigation techniques inside openqaoa_core will works if we are just going to have&lt;br&gt;MITIQ integration.But, if in a future other developers try to add other error mitigation frameworks to OpenQAOA, it will&lt;br&gt;be better to have different APIs for each error mit. framework. Is the same that happens with qiskit backends and pyquil&lt;br&gt;backends. Each one has it own API.&lt;br&gt;&lt;br&gt;*&lt;b&gt;In my opinion, i wouldnt focus on adding all the other MITIQ frameworks supported to openqaoa.&lt;/b&gt; Our modification&lt;br&gt;could work just implementing pyquil and qiskit. Adding all the other frameworks will include an extra time and i&amp;nbsp;&lt;br&gt;think is not part a main goal of our project. Maybe could be an extension of the project to be done in the future by us&lt;br&gt;or other developers.&lt;br&gt;&lt;/font&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;" vertex="1" parent="1">
          <mxGeometry x="-325" y="125" width="1100" height="510" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
